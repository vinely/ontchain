package ontchain

import (
	"fmt"
	"testing"

	"github.com/ontio/ontology/common"
)

func TestGetTxInfo(t *testing.T) {
	tx, err := GetTxInfo("9f16c561fe529025120bf2da147f7ee3c138bcf3e685274ff61412db74b880f0")
	if err != nil {
		t.Error(err)
		return
	}
	fmt.Printf("Raw : %s\n\n", string(tx.Raw))
	fmt.Printf("payer : %s\n", tx.Payer.ToHexString())
}

func TestGetStorage(t *testing.T) {
	data, err := GetStorage("80c2b7297b006e5ca8fcd52766453219bc5c4435", []byte("e924e3e58011cabffe202fc1c8408179464d4cb43d654f4d68b3a855a0b2342f"))
	if err != nil {
		t.Error(err)
		return
	}
	fmt.Printf("data : %s\n\n", string(data))

}

func TestGetSmartContractEvent(t *testing.T) {
	txhash := "c2939b5ef482c362266c9e48ba0ecaaf0b2eff9b5c4c1105bd1717854efecff2"
	hash, err := common.Uint256FromHexString(txhash)
	if err != nil {
		t.Error(err)
		return
	}
	fmt.Printf("hash :%s\n", hash.ToHexString())
	event, err := GetSmartContractEvent(txhash)
	if err != nil {
		t.Error(err)
		return
	}
	fmt.Printf("State : %v\n", event.State)
	for _, ntf := range event.Notify {
		fmt.Printf("Notify : %v\n", ntf.States)
	}

}

func TestDeployContractCode(t *testing.T) {
	w := testCreateWallet()
	acct, _ := w.Wallet.GetDefaultAccount(w.Password)
	hash, err := DeployContractCode(acct, "simplestorage", "0111c56b6c766b00527ac46c766b51527ac4616c766b00c304506f7374876c766b52527ac46c766b52c3645d00616c766b51c3c0529c009c6c766b55527ac46c766b55c3640e00006c766b56527ac46277016c766b51c300c36c766b53527ac46c766b51c351c36c766b54527ac46c766b53c36c766b54c3617c654e026c766b56527ac46242016c766b00c303507574876c766b57527ac46c766b57c3645d00616c766b51c3c0529c009c6c766b5a527ac46c766b5ac3640e00006c766b56527ac46204016c766b51c300c36c766b58527ac46c766b51c351c36c766b59527ac46c766b58c36c766b59c3617c65e2006c766b56527ac462cf006c766b00c303476574876c766b5b527ac46c766b5bc3644900616c766b51c3c0519c009c6c766b5d527ac46c766b5dc3640e00006c766b56527ac46291006c766b51c300c36c766b5c527ac46c766b5cc36165e0016c766b56527ac46270006c766b00c30652656d6f7665876c766b5e527ac46c766b5ec3644900616c766b51c3c0519c009c6c766b60527ac46c766b60c3640e00006c766b56527ac4622f006c766b51c300c36c766b5f527ac46c766b5fc361653b026c766b56527ac4620e00006c766b56527ac46203006c766b56c3616c756655c56b6c766b00527ac46c766b51527ac46161681953797374656d2e53746f726167652e476574436f6e746578746c766b00c3617c681253797374656d2e53746f726167652e4765746c766b52527ac46c766b52c300a06c766b53527ac46c766b53c364440061616c766b00c309206578697374656421617c084572726f724d736753c1681553797374656d2e52756e74696d652e4e6f7469667961006c766b54527ac4624c0061681953797374656d2e53746f726167652e476574436f6e746578746c766b00c36c766b51c3615272681253797374656d2e53746f726167652e50757461516c766b54527ac46203006c766b54c3616c756653c56b6c766b00527ac46c766b51527ac46161681953797374656d2e53746f726167652e476574436f6e746578746c766b00c36c766b51c3615272681253797374656d2e53746f726167652e50757461516c766b52527ac46203006c766b52c3616c756654c56b6c766b00527ac46161681953797374656d2e53746f726167652e476574436f6e746578746c766b00c3617c681253797374656d2e53746f726167652e4765746c766b51527ac46c766b51c3009c6c766b52527ac46c766b52c364490061616c766b00c30d206e6f74206578697374656421617c084572726f724d736753c1681553797374656d2e52756e74696d652e4e6f746966796101206c766b53527ac46212006c766b51c36c766b53527ac46203006c766b53c3616c756654c56b6c766b00527ac46161681953797374656d2e53746f726167652e476574436f6e746578746c766b00c3617c681253797374656d2e53746f726167652e4765746c766b51527ac46c766b51c3009c6c766b52527ac46c766b52c364480061616c766b00c30d206e6f74206578697374656421617c084572726f724d736753c1681553797374656d2e52756e74696d652e4e6f7469667961006c766b53527ac462490061681953797374656d2e53746f726167652e476574436f6e746578746c766b00c3617c681553797374656d2e53746f726167652e44656c65746561516c766b53527ac46203006c766b53c3616c7566")
	if err != nil {
		t.Error(err)
		return
	}
	fmt.Println(hash.ToHexString())
}

func TestDeployContractCode2(t *testing.T) {
	w := testCreateWallet()
	acct, _ := w.Wallet.GetDefaultAccount(w.Password)
	hash, err := DeployContractCode(acct, "claim", "5fc56b6c766b00527ac46c766b51527ac4616c766b00c306436f6d6d6974876c766b52527ac46c766b52c3647100616c766b51c3c0539c009c6c766b56527ac46c766b56c3640e00006c766b57527ac46232016c766b51c300c36c766b53527ac46c766b51c351c36c766b54527ac46c766b51c352c36c766b55527ac46c766b53c36c766b54c36c766b55c361527265fc006c766b57527ac462e9006c766b00c3065265766f6b65876c766b58527ac46c766b58c3645d00616c766b51c3c0529c009c6c766b5b527ac46c766b5bc3640e00006c766b57527ac462a8006c766b51c300c36c766b59527ac46c766b51c351c36c766b5a527ac46c766b59c36c766b5ac3617c6528026c766b57527ac46273006c766b00c309476574537461747573876c766b5c527ac46c766b5cc3644900616c766b51c3c0519c009c6c766b5e527ac46c766b5ec3640e00006c766b57527ac4622f006c766b51c300c36c766b5d527ac46c766b5dc361651b046c766b57527ac4620e00006c766b57527ac46203006c766b57c3616c756658c56b6c766b00527ac46c766b51527ac46c766b52527ac46161681953797374656d2e53746f726167652e476574436f6e746578746c766b00c3617c681253797374656d2e53746f726167652e4765746c766b53527ac46c766b53c300a06c766b56527ac46c766b56c364440061616c766b00c309206578697374656421617c084572726f724d736753c1681553797374656d2e52756e74696d652e4e6f7469667961006c766b57527ac462ee006154c56c766b54527ac46c766b54c36c766b00c3007cc46c766b54c351537cc46c766b54c36c766b51c3517cc46c766b54c36c766b52c3527cc46c766b54c361681853797374656d2e52756e74696d652e53657269616c697a656c766b55527ac461681953797374656d2e53746f726167652e476574436f6e746578746c766b00c36c766b55c3615272681253797374656d2e53746f726167652e50757461616c766b51c31320637265617465206e657720636c61696d3a206c766b00c3615272045075736854c1681553797374656d2e52756e74696d652e4e6f7469667961516c766b57527ac46203006c766b57c3616c756659c56b6c766b00527ac46c766b51527ac46161681953797374656d2e53746f726167652e476574436f6e746578746c766b00c3617c681253797374656d2e53746f726167652e4765746c766b52527ac46c766b52c3009c6c766b55527ac46c766b55c364480061616c766b00c30d206e6f74206578697374656421617c084572726f724d736753c1681553797374656d2e52756e74696d652e4e6f7469667961006c766b56527ac462a7016c766b52c361681a53797374656d2e52756e74696d652e446573657269616c697a656c766b53527ac46c766b53c353c3519c009c6c766b57527ac46c766b57c3644b0061616c766b00c31020696e76616c6964207374617475732e617c084572726f724d736753c1681553797374656d2e52756e74696d652e4e6f7469667961006c766b56527ac4621c016c766b53c351c36c766b51c3617c65ac01009c6c766b58527ac46c766b58c364440061616c766b51c30920696e76616c69642e617c084572726f724d736753c1681553797374656d2e52756e74696d652e4e6f7469667961006c766b56527ac462b9006c766b53c300537cc46c766b53c361681853797374656d2e52756e74696d652e53657269616c697a656c766b54527ac461681953797374656d2e53746f726167652e476574436f6e746578746c766b00c36c766b54c3615272681253797374656d2e53746f726167652e50757461616c766b51c30f207265766f6b6520636c61696d3a206c766b00c3615272045075736854c1681553797374656d2e52756e74696d652e4e6f7469667961516c766b56527ac46203006c766b56c3616c756653c56b6c766b00527ac46161681953797374656d2e53746f726167652e476574436f6e746578746c766b00c3617c681253797374656d2e53746f726167652e4765746c766b51527ac4616c766b00c309207374617475733a206c766b51c3615272045075736854c1681553797374656d2e52756e74696d652e4e6f74696679616c766b51c36c766b52527ac46203006c766b52c3616c756657c56b6c766b00527ac46c766b51527ac4616c766b00c3c06c766b51c3c09c009c6c766b52527ac46c766b52c3640f0061006c766b53527ac4627900006c766b54527ac4624800616c766b00c36c766b54c3517f6c766b51c36c766b54c3517f9c009c6c766b55527ac46c766b55c3640e00006c766b53527ac4623800616c766b54c351936c766b54527ac46c766b54c36c766b00c3c09f6c766b56527ac46c766b56c363a3ff516c766b53527ac46203006c766b53c3616c7566")
	if err != nil {
		t.Error(err)
		return
	}
	fmt.Println(hash.ToHexString())
}
